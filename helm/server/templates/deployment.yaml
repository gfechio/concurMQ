apiVersion: apps/v1
kind: Deployment
{{ template "lib-metadata.metadata" . }}
  name: {{ template "lib-metadata.fullname" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "lib-metadata.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "lib-metadata.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{ if .Values.esIndexName -}}
        es_index: {{ .Values.esIndexName }}
        {{- end }}
      annotations:
        kubernetes.io/change-cause: {{ .Values.changeCause }}
        {{ if .Values.monitoring.enabled -}}
        prometheus.io/scrape: "true"
        prometheus.io/path: "{{ .Values.monitoring.path }}"
        prometheus.io/port: "{{ .Values.monitoring.port }}"
        {{- end }}
        {{- if .Values.iamRole.enabled }}
        iam.amazonaws.com/role: "{{ .Values.iamRole.name }}"
        {{- end }}
        {{- if .Values.podAnnotations }}
        {{ toYaml .Values.podAnnotations | indent 8 }}
        {{- end }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.registry }}{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.command.cmd }}
          command: {{ .Values.command.cmd }}
          {{- end }}
          {{- if .Values.command.extraArgs }}
          args: [{{- template "lib-metadata.command.args" . }}]
          {{- end }}
          {{- with  .Values.service }}
          ports:
            {{- range .ports }}
            - name: {{ .name | default (printf "%s-%d" (.protocol | default "HTTP" | lower) (int64 .port)) }}
              containerPort: {{ .port }}
              protocol: "TCP"
            {{- end }}
          {{- end }}
          env:
          {{- range $key, $value := .Values.env }}
          - name: {{ $key }}
            value: "{{ $value }}"
          {{- end -}}
          {{ if .Values.tracing.enabled -}}
          {{- range $key, $value := .Values.tracing.env }}
          - name: {{ $key }}
            value: "{{ $value }}"
          {{- end }}
          - name: NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          {{- end }}
          volumeMounts:
          {{ if .Values.secrets.enabled -}}
          - name: secrets
            mountPath: {{ .Values.secrets.mountPath }}
            readOnly: true
          {{- end }}
          {{ if .Values.configMaps.enabled -}}
          {{- range .Values.configMaps.cms}}
          - name: {{ .name }}
            mountPath: {{ .mountPath }}/{{ .fileName }}
            subPath: {{ .fileName }}
            readOnly: true
          {{- end -}}
          {{- end }}
          livenessProbe:
{{ toYaml .Values.livenessProbe | indent 12 }}
          readinessProbe:
{{ toYaml .Values.readinessProbe | indent 12 }}
          {{- if .Values.startupProbe }}
          startupProbe:
{{ toYaml .Values.startupProbe | indent 12 }}
          {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
      serviceAccountName: {{ template "lib-metadata.fullname" . }}
      volumes:
      {{ if .Values.configMaps.enabled -}}
      {{- range .Values.configMaps.cms}}
      - name: {{ .name }}
        configMap:
          name: {{ .name }}
      {{- end -}}
      {{- end }}
      {{ if .Values.secrets.enabled -}}
      - name: secrets
        secret:
          secretName: {{ template "lib-metadata.fullname" . }}
          items:
          {{- range $key, $value := .Values.secrets.items }}
          - key: {{ $key }}
            path: {{ $key }}
          {{- end }}
          {{- range $key, $value := .Values.secrets.files }}
          - key: {{ $key }}
            path: {{ $key }}
          {{- end }}
      {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
