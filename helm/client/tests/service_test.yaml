suite: test service
templates:
  - service.yaml
tests:
  - it: should pass
    set:
      global.labels.owner: platform
    asserts:
      - hasDocuments:
          count: 1
      - isAPIVersion:
          of: v1
      - isKind:
          of: Service
      - matchRegex:
          path: metadata.name
          pattern: -beat-base$
      - equal:
          path: metadata.labels.owner
          value: platform
      - contains:
          path: spec.ports
          content:
            port: 80
            targetPort: 80
            protocol: TCP
            name: http-80
      - equal:
          path: spec.type
          value: ClusterIP
      - equal:
          path: spec.selector
          value:
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: beat-base

  - it: should have NodePort 8080
    set:
      global.labels.owner: platform
      service:
        type: NodePort
        ports:
          - port: 8080
    asserts:
      - contains:
          path: spec.ports
          content:
            port: 8080
            targetPort: 8080
            protocol: TCP
            name: http-8080
      - equal:
          path: spec.type
          value: NodePort

  - it: should have blackbox enabled
    set:
      global.labels.owner: platform
      blackboxProbe:
        enabled: true
        path: /health
        for: 5m
        severity: warning
    asserts:
      - equal:
          path: metadata.annotations.prometheus\.io/probe
          value: "true"
      - equal:
          path: metadata.annotations.prometheus\.io/probe_path
          value: /health
      - equal:
          path: metadata.annotations.prometheus\.io/probe_for
          value: 5m
      - equal:
          path: metadata.annotations.prometheus\.io/probe_severity
          value: warning

  - it: should have mop enabled
    set:
      global.labels.owner: platform
      mop:
        enabled: true
    asserts:
      - equal:
          path: metadata.annotations.master-of-puppets\.alpha\.kubernetes\.io/enabled
          value: "true"

  - it: should have declared targetPort
    set:
      global.labels.owner: platform
      service:
        ports:
          - port: 80
            targetPort: 50000
    asserts:
      - contains:
          path: spec.ports
          content:
            port: 80
            targetPort: 50000
            protocol: TCP
            name: http-80

  - it: should have declared multiple ports
    set:
      global.labels.owner: platform
      service:
        ports:
          - port: 80
          - port: 8081
          - port: 8082
            targetPort: 5000
          - port: 8083
            targetPort: 6000
            name: custom-port-name
          - port: 8084
            protocol: GRPC
    asserts:
      - contains:
          path: spec.ports
          content:
            name: http-80
            port: 80
            protocol: TCP
            targetPort: 80
      - contains:
          path: spec.ports
          content:
            name: http-8081
            port: 8081
            protocol: TCP
            targetPort: 8081
      - contains:
          path: spec.ports
          content:
            name: http-8082
            port: 8082
            protocol: TCP
            targetPort: 5000
      - contains:
          path: spec.ports
          content:
            name: custom-port-name
            port: 8083
            protocol: TCP
            targetPort: 6000
      - contains:
          path: spec.ports
          content:
            name: grpc-8084
            port: 8084
            protocol: TCP
            targetPort: 8084
